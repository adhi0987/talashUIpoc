{"ast":null,"code":"import { HttpRequest } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction FileuploadComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.progress, \"%\\n\");\n  }\n}\nfunction FileuploadComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.message, \"\\n\");\n  }\n}\nexport class FileuploadComponent {\n  constructor(http) {\n    this.http = http;\n  }\n  upload(files) {\n    if (files.length === 0) return;\n    const formData = new FormData();\n    for (let file of files) formData.append(file.name, file);\n    const uploadReq = new HttpRequest('POST', `api/upload`, formData, {\n      reportProgress: true\n    });\n    this.http.request(uploadReq).subscribe(event => {\n      // if (event.type === HttpEventType.UploadProgress)\n      //     this.progress = Math.round(100 * event.loaded / event.total);\n      // else if (event.type === HttpEventType.Response)\n      //     this.message = event.body.toString();\n    });\n  }\n}\nFileuploadComponent.ɵfac = function FileuploadComponent_Factory(t) {\n  return new (t || FileuploadComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\nFileuploadComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FileuploadComponent,\n  selectors: [[\"app-fileupload\"]],\n  decls: 20,\n  vars: 2,\n  consts: [[\"font-color\", \"blue\"], [\"value\", \"image\"], [\"value\", \"video\"], [\"value\", \"pdf\"], [\"value\", \"youtube\"], [\"value\", \"facebook\"], [\"type\", \"file\", \"size\", \"50\", \"width\", \"48\", \"maxlength\", \"50\", \"multiple\", \"\", 2, \"width\", \"150px\"], [\"file\", \"\"], [\"style\", \"font-weight:bold;color:green;\", 4, \"ngIf\"], [2, \"font-weight\", \"bold\", \"color\", \"green\"]],\n  template: function FileuploadComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"fieldset\")(1, \"h4\");\n      i0.ɵɵelement(2, \"font\", 0);\n      i0.ɵɵtext(3, \"Upload\\u00A0Files \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"select\")(5, \"option\", 1);\n      i0.ɵɵtext(6, \"Image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"option\", 2);\n      i0.ɵɵtext(8, \"Video\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"option\", 3);\n      i0.ɵɵtext(10, \"Pdf\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"option\", 4);\n      i0.ɵɵtext(12, \"Youtube\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"option\", 5);\n      i0.ɵɵtext(14, \"Facebook\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(15, \"input\", 6, 7)(17, \"br\");\n      i0.ɵɵtemplate(18, FileuploadComponent_span_18_Template, 2, 1, \"span\", 8);\n      i0.ɵɵtemplate(19, FileuploadComponent_span_19_Template, 2, 1, \"span\", 8);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"ngIf\", ctx.progress > 0 && ctx.progress < 100);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.message);\n    }\n  },\n  dependencies: [i2.NgIf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\", \"fieldset[_ngcontent-%COMP%] {\\n        margin: 8px;\\n        border: 3px solid silver;\\n        padding: 12px;\\n        border-radius: 14px;\\n        width: 189px;\\n    }\"]\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAqC,sBAAsB;;;;;;;ICmB3FC,+BAAmF;IAC/EA,YACJ;IAAAA,iBAAO;;;;IADHA,eACJ;IADIA,kDACJ;;;;;IAEAA,+BAA4D;IACxDA,YACJ;IAAAA,iBAAO;;;;IADHA,eACJ;IADIA,gDACJ;;;ADlBA,OAAM,MAAOC,mBAAmB;EAG5BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,MAAM,CAACC,KAAqB;IACxB,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAClB;IAEJ,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE/B,KAAK,IAAIC,IAAI,IAAIJ,KAAK,EAClBE,QAAQ,CAACG,MAAM,CAACD,IAAI,CAACE,IAAI,EAAEF,IAAI,CAAC;IAEpC,MAAMG,SAAS,GAAG,IAAIb,WAAW,CAAC,MAAM,EAAE,YAAY,EAAEQ,QAAQ,EAAE;MAC9DM,cAAc,EAAE;KACnB,CAAC;IAEF,IAAI,CAACV,IAAI,CAACW,OAAO,CAACF,SAAS,CAAC,CAACG,SAAS,CAACC,KAAK,IAAG;MAC3C;MACA;MACA;MACA;IAAA,CACH,CAAC;EACN;;AAxBSf,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCChCrB,gCAAU;MACNA,0BAA+B;MAAAA,kCAAmB;MAAAA,iBAAK;MAC3DA,8BAAQ;MACkBA,qBAAK;MAAAA,iBAAS;MACpCA,iCAAsB;MAAAA,qBAAK;MAAAA,iBAAS;MACpCA,iCAAoB;MAAAA,oBAAG;MAAAA,iBAAS;MAChCA,kCAAwB;MAAAA,wBAAO;MAAAA,iBAAS;MACxCA,kCAAyB;MAAAA,yBAAQ;MAAAA,iBAAS;MAE9CA,+BAAiG;MAEjGA,wEAEO;MAEPA,wEAEO;MAACA,iBAAW;;;MAN0BA,gBAAoC;MAApCA,6DAAoC;MAIpCA,eAAa;MAAbA,kCAAa","names":["HttpRequest","i0","FileuploadComponent","constructor","http","upload","files","length","formData","FormData","file","append","name","uploadReq","reportProgress","request","subscribe","event","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Tal\\Analysis\\ShareGoodVibe\\ShareGoodVibe\\ClientApp\\src\\app\\file-upload\\file-upload.component.ts","C:\\Tal\\Analysis\\ShareGoodVibe\\ShareGoodVibe\\ClientApp\\src\\app\\file-upload\\file-upload.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpRequest, HttpEventType, HttpResponse } from '@angular/common/http';\n\n@Component({\n    selector: 'app-fileupload',\n    templateUrl: './file-upload.component.html',\n    styleUrls: ['./file-upload.component.css']\n})\nexport class FileuploadComponent {\n    public progress!: number;\n    public message!: string;\n    constructor(private http: HttpClient) { }\n\n    upload(files: string | any[]) {\n        if (files.length === 0)\n            return;\n\n        const formData = new FormData();\n\n        for (let file of files)\n            formData.append(file.name, file);\n\n        const uploadReq = new HttpRequest('POST', `api/upload`, formData, {\n            reportProgress: true,\n        });\n\n        this.http.request(uploadReq).subscribe(event => {\n            // if (event.type === HttpEventType.UploadProgress)\n            //     this.progress = Math.round(100 * event.loaded / event.total);\n            // else if (event.type === HttpEventType.Response)\n            //     this.message = event.body.toString();\n        });\n    }\n}  ","<style>\n    fieldset {\n        margin: 8px;\n        border: 3px solid silver;\n        padding: 12px;\n        border-radius: 14px;\n        width: 189px;\n    }\n</style>\n<fieldset>\n<h4><font font-color=\"blue\"></font>Upload&nbsp;Files  </h4>\n<select>\n    <option value=\"image\">Image</option>\n    <option value=\"video\">Video</option>\n    <option value=\"pdf\">Pdf</option>\n    <option value=\"youtube\">Youtube</option>\n    <option value=\"facebook\">Facebook</option>\n</select>\n<input #file type=\"file\" style=\"width: 150px;\"  size=\"50\" width=\"48\"  maxlength=\"50\" multiple  />\n<br />\n<span style=\"font-weight:bold;color:green;\" *ngIf=\"progress > 0 && progress < 100\">\n    {{progress}}%\n</span>\n\n<span style=\"font-weight:bold;color:green;\" *ngIf=\"message\">\n    {{message}}\n</span> </fieldset>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}