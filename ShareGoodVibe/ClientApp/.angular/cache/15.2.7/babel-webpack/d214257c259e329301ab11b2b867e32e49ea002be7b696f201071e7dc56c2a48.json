{"ast":null,"code":"import { of } from 'rxjs';\nimport { CHARACTERS } from './mock-data';\nimport { CHARACTERS1 } from './mock-data';\nimport { BookMarks } from './mock-data';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdventureTimeService {\n  constructor(http, baseUrl) {\n    this.data = [];\n    this.bookmarkdata = [];\n    this.videoids = [];\n    this.videoids1 = [];\n    this.CHARACTERS = [];\n    this.BookMarks = [];\n    this.CHARACTERS1 = [];\n    this.http = http;\n    //https://sharegoodvibes.azurewebsites.net/v1/users/rise\n    //https://sharegoodthings.azurewebsites.net/weatherforecast/GetUserData?input=party\n    http.get('https://sharegoodthings.azurewebsites.net/v1/users/rise').subscribe(result => {\n      this.data = result;\n      console.log(this.data);\n      this.data.forEach(function (element) {\n        CHARACTERS.push(element);\n      });\n      CHARACTERS.push(this.data[0]);\n    }, error => console.error(error));\n  }\n  getCharacters(input) {\n    //https://sharegoodvibes.azurewebsites.net/v1/users/rise\n    // var url = \"https://sharegoodthings.azurewebsites.net/weatherforecast/GetUserData?input=\" + input;\n    var url = \"https://sharegoodthings.azurewebsites.net/v1/users/\" + input;\n    this.http.get(url).subscribe(result => {\n      this.data = result;\n      // return this.data;\n      this.data.forEach(function (element) {\n        CHARACTERS.push(element);\n      });\n      CHARACTERS.push(this.data[0]);\n    }, error => console.error(error));\n    return of(CHARACTERS);\n  }\n  getBookmakrs() {\n    var url = \"https://sharegoodthings.azurewebsites.net/v1/trending/\";\n    this.http.get(url).subscribe(result => {\n      //console.log(\"result @@@@@\"+JSON.stringify( result));\n      this.bookmarkdata = result;\n      // this.bookmarkdata.forEach(function (element) {\n      //   BookMarks.push(element);\n      // });\n      BookMarks.push(this.bookmarkdata[0]);\n      console.log(\"BOOKMAKRS\" + JSON.stringify(this.BookMarks));\n    }, error => console.error(error));\n    return of(BookMarks);\n  }\n  getColumns() {\n    return [\"name\", \"age\", \"species\", \"occupation\", \"info1\", \"info2\"];\n  }\n  //delete content \n  Updateclicks(str) {\n    console.log(\"on bookmark \" + str);\n    var url = \"/data/Updateclicks?input=\" + str;\n    this.http.get(url).subscribe(result => {\n      console.log(\"deleted content\");\n    });\n  }\n  GetFavourites(str) {\n    var url = \"/data/GetFavourites?userid=\" + str;\n    while (CHARACTERS1.length > 0) {\n      CHARACTERS1.pop();\n    }\n    this.http.get(url).subscribe(result => {\n      this.data = result;\n      console.log(this.data);\n      this.data.forEach(function (element) {\n        CHARACTERS1.push(element);\n      });\n      CHARACTERS1.push(this.data[0]);\n    }, error => console.error(error));\n    return of(CHARACTERS1);\n  }\n  //video data ..\n  getVideodata(searchword) {\n    var url = \"https://sharegoodthings.azurewebsites.net/weatherforecast/GetVideolist?input=\" + \"searchword\";\n    this.http.get(url).subscribe(result => {\n      this.videoids = result;\n      this.videoids1 = this.videoids[0];\n    }, error => console.error(error));\n    return this.videoids1;\n  }\n  getvideodata1(searchword) {\n    var url = \"https://sharegoodthings.azurewebsites.net/weatherforecast/GetVideolist?input=\" + \"searchword\";\n    return this.http.get(url).pipe(product => this.videoids3 = product);\n  }\n}\nAdventureTimeService.ɵfac = function AdventureTimeService_Factory(t) {\n  return new (t || AdventureTimeService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nAdventureTimeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdventureTimeService,\n  factory: AdventureTimeService.ɵfac\n});","map":{"version":3,"mappings":"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","names":["of","CHARACTERS","CHARACTERS1","BookMarks","AdventureTimeService","constructor","http","baseUrl","get","subscribe","result","data","console","log","forEach","element","push","error","getCharacters","input","url","getBookmakrs","bookmarkdata","JSON","stringify","getColumns","Updateclicks","str","GetFavourites","length","pop","getVideodata","searchword","videoids","videoids1","getvideodata1","pipe","product","videoids3","factory"],"sourceRoot":"","sources":["C:\\Tal\\Analysis\\Talash\\Talash-main\\ShareGoodVibe\\ClientApp\\src\\app\\services\\adventure-time.service.ts"],"sourcesContent":["import { Inject, Injectable } from '@angular/core';\nimport { Observable, of  } from 'rxjs';\n\n\nimport { HttpClient } from '@angular/common/http'\nimport { CHARACTERS } from './mock-data';\nimport { CHARACTERS1 } from './mock-data';\nimport { BookMarks } from './mock-data';\nimport { concat } from 'rxjs';\n\n\n@Injectable()\nexport class AdventureTimeService {\n\n    public http: HttpClient;\n    public data: WeatherForecast[] = [];\n    public bookmarkdata: BookMarkData[] = [];\n    \n    public videoids: any[] = [];\n    public videoids3!: Observable<any[]>;\n\n    public videoids1: string[]=[];\n    public CHARACTERS: any[] = [];\n    public BookMarks: any[] = [];\n    public CHARACTERS1: any[] = [];\n    constructor(http: HttpClient , @Inject('BASE_URL') baseUrl: string) {\n       this.http = http;\n      //https://sharegoodvibes.azurewebsites.net/v1/users/rise\n      //https://sharegoodthings.azurewebsites.net/weatherforecast/GetUserData?input=party\n       http.get < WeatherForecast[]>('https://sharegoodthings.azurewebsites.net/v1/users/rise').subscribe\n            (\n           result => {\n               this.data = result; \n                console.log(this.data);\n                this.data.forEach(function (element) {\n                    CHARACTERS.push(element);\n                });\n                \n               CHARACTERS.push(this.data[0]);\n           }, error => console.error(error));\n    \n    }\n\n    getCharacters(input : string ): Observable<WeatherForecast[]>{\n      //https://sharegoodvibes.azurewebsites.net/v1/users/rise\n      // var url = \"https://sharegoodthings.azurewebsites.net/weatherforecast/GetUserData?input=\" + input;\n\n        var url = \"https://sharegoodthings.azurewebsites.net/v1/users/\" + input;\n\n        this.http.get<WeatherForecast[]>(url).subscribe\n            (\n            result => {\n              \n                this.data = result;\n               // return this.data;\n              \n                this.data.forEach(function (element) {\n                    CHARACTERS.push(element);\n                });\n\n                CHARACTERS.push(this.data[0]);\n            }, error => console.error(error));\n\n        \n        return of(CHARACTERS);\n  }\n  getBookmakrs():Observable<BookMarkData[]> {\n    var url = \"https://sharegoodthings.azurewebsites.net/v1/trending/\" ;\n\n        this.http.get<BookMarkData[]>(url).subscribe\n            (\n            result => {\n              //console.log(\"result @@@@@\"+JSON.stringify( result));\n                this.bookmarkdata = result;\n                // this.bookmarkdata.forEach(function (element) {\n                //   BookMarks.push(element);\n                // });\n\n                BookMarks.push(this.bookmarkdata[0]);\n                console.log(\"BOOKMAKRS\" + JSON.stringify(this.BookMarks))\n            }, error => console.error(error));\n\n       \n        return of(BookMarks);\n  }\n\n  getColumns(): string[]{\n    return [\"name\", \"age\", \"species\", \"occupation\",\"info1\",\"info2\"]\n  }\n   //delete content \n\n   Updateclicks(str: string)\n   {\n    console.log(\"on bookmark \"+str);\n       var url = \"/data/Updateclicks?input=\" + str;\n            this.http.get(url).subscribe\n            ( result => {\n                console.log(\"deleted content\"); \n                  });\n   }\n    GetFavourites(str: string): Observable<WeatherForecast[]> {\n        var url = \"/data/GetFavourites?userid=\" + str;\n        while (CHARACTERS1.length > 0) {\n            CHARACTERS1.pop();\n        }\n        this.http.get<WeatherForecast[]>(url).subscribe\n            (\n                result => {\n                    this.data = result;\n                    console.log(this.data);\n                    this.data.forEach(function (element) {\n                        CHARACTERS1.push(element);\n                    });\n\n                    CHARACTERS1.push(this.data[0]);\n                }, error => console.error(error));\n        return of(CHARACTERS1);\n        \n    }\n\n  //video data ..\n\n    getVideodata(searchword: string): string[] {\n       var url = \"https://sharegoodthings.azurewebsites.net/weatherforecast/GetVideolist?input=\" + \"searchword\";\n\n        this.http.get<WeatherForecast1[]>(url).subscribe\n            (\n            result => {\n                this.videoids = <WeatherForecast1[]>result;\n               \n                this.videoids1 = this.videoids[0];\n\n                               \n            }, error => console.error(error));\n        \n        return this.videoids1;\n    }\n    getvideodata1(searchword: string): Observable<any[]> {\n       var url = \"https://sharegoodthings.azurewebsites.net/weatherforecast/GetVideolist?input=\" + \"searchword\";\n\n        return this.http.get<any[]>(url)\n            .pipe(\n                product => this.videoids3 = product \n           \n\n               \n            );\n    }\n}\n\ninterface WeatherForecast {\n    age: string ;\n    name: string;\n    species: number;\n    occupation: string;\n   \n    \n}\ninterface BookMarkData {\n    url: string ;\n    type: string;\n    info1:string;\n    info2:string;\n    name:string;\n    age: string;\n    species:string;\n    occupation:string;   \n   \n    \n}\n\ninterface WeatherForecast1 {\n    name: string;\n   \n}\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}